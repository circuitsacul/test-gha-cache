name: CI/CD

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}
  REPO:  ${{ github.event.repository.name }}
  CARGO_TERM_COLOR: always

jobs:
  build-and-push:
    name: Build & push (dev)
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: test-gha-cache
            dockerfile: Dockerfile
            context: .
    steps:
      - uses: actions/checkout@v4

      - name: Set up buildx
        uses: docker/setup-buildx-action@v3

      - name: Reserve cache space
        uses: actions/cache@v4
        id: cm
        with:
          path: buildx-cache-mounts
          key: cm-${{ runner.os }}-${{ hashFiles('Dockerfile') }}

      # Inject previously saved cache-mount contents into the builder
      - name: Inject cache mounts
        uses: reproducible-containers/buildkit-cache-dance@v3
        with:
          builder: ${{ steps.bx.outputs.name }}
          cache-dir: buildx-cache-mounts
          dockerfile: Dockerfile
          # optional: skip extraction later if we already had a cache hit
          skip-extraction: ${{ steps.cm.outputs.cache-hit }}

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push ${{ matrix.name }}
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ env.REPO }}-${{ matrix.name }}:latest
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
  
